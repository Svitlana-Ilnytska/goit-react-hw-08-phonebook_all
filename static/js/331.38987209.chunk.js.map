{"version":3,"file":"static/js/331.38987209.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","views/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  useCreateContactMutation,\r\n  useEditContactMutation,\r\n  useFetchContactsQuery,\r\n} from \"../../redux/contacts/operations\";\r\nimport { useAuth } from '../../hooks';\r\n\r\nimport {\r\n  Button,\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  useToast,\r\n} from \"@chakra-ui/core\";\r\n\r\nexport default function ContactForm({\r\n  id,\r\n  nameItem,\r\n  numberItem,\r\n  onCloseModal,\r\n}) {\r\n  const [name, setName] = useState(nameItem);\r\n  const [number, setNumber] = useState(numberItem);\r\n  const {token} = useAuth();\r\n\r\n  const { data: contacts } = useFetchContactsQuery(token);\r\n  const [createContact] = useCreateContactMutation();\r\n  const [editContact] = useEditContactMutation();\r\n  const toast = useToast();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        console.warn(`name - ${name} not matched`);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const contactName = {\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    const theSameContact = contacts?.some((contact) =>\r\n      contact.name.toLowerCase().includes(contactName.name.toLowerCase())\r\n    );\r\n\r\n    if (id) {\r\n      editContact({ id, contactName, token });\r\n      onCloseModal();\r\n      toast({\r\n        title: \"Contact saved.\",\r\n        description: \"We've updated your contact.\",\r\n        status: \"success\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      });\r\n    } else if (theSameContact) {\r\n      toast({\r\n        title: \"An error occurred.\",\r\n        description: `${contactName.name} is already in contacts.`,\r\n        status: \"error\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      createContact({ contactName, token });\r\n      toast({\r\n        title: \"Contact added.\",\r\n        description: \"We've created your contact.\",\r\n        status: \"success\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      });\r\n      reset();\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <Box my={8} textAlign=\"left\">\r\n      <form onSubmit={handleSubmit}>\r\n        <FormControl>\r\n          <FormLabel>Name </FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n            placeholder=\"Type name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я\\\\s\\\\'-]+$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl mt={4}>\r\n          <FormLabel> Number</FormLabel>\r\n          <Input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleChange}\r\n            placeholder=\"Type number\"\r\n            pattern=\"[+]?[0-9]{1,4}[-.\\\\s]?[()0-9]{1,3}[-.\\\\s]?[0-9]{1,4}[-.\\\\s]?[0-9]{1,4}[-.\\\\s]?[0-9]{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </FormControl>\r\n        {id ? (\r\n          <Button\r\n            variantColor=\"teal\"\r\n            width=\"45%\"\r\n            borderWidth={1}\r\n            mt={4}\r\n            type=\"submit\"\r\n          >\r\n            Save changes\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            variantColor=\"teal\"\r\n            width=\"full\"\r\n            borderWidth={1}\r\n            mt={4}\r\n            type=\"submit\"\r\n          >\r\n            Add contact\r\n          </Button>\r\n        )}\r\n      </form>\r\n    </Box>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  id: PropTypes.string, \r\n  nameItem: PropTypes.string,\r\n  numberItem: PropTypes.string,\r\n  onCloseModal: PropTypes.func,\r\n};\r\n\r\nContactForm.defaultProps = {\r\n  id: \"\", \r\n  nameItem: \"\", \r\n  numberItem: \"\",\r\n};\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport filterContact from \"../../redux/contacts/contacts-actions\";\r\n\r\nimport { Input, Text } from \"@chakra-ui/core\";\r\n\r\nconst Filter = () => {\r\n  const value = useSelector((state) => state.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleFilter = (e) => dispatch(filterContact(e.target.value));\r\n\r\n  return (\r\n    <>\r\n      <Text textAlign=\"left\">Find contacts by name</Text>\r\n\r\n      <Input\r\n        mb={4}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={handleFilter}\r\n        placeholder=\"Search...\"\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport {\r\n  Button,\r\n  Heading,\r\n  Text,\r\n  Flex,\r\n  Icon,\r\n  Avatar,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n} from \"@chakra-ui/core\";\r\n\r\nimport { useDisclosure } from \"@chakra-ui/core\";\r\n\r\nexport default function ContactItem({ id, name, number, onDeleteContact }) {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const initialRef = React.useRef();\r\n  const finalRef = React.useRef();\r\n\r\n  return (\r\n    <>\r\n      <Flex\r\n        py={2}\r\n        px={2}\r\n        borderRadius=\"md\"\r\n        bg=\"white.50\"\r\n        w=\"full\"\r\n        border=\"1px\"\r\n        borderColor=\"teal.500\"\r\n        my={1}\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Flex>\r\n          <Avatar mr={4} />\r\n          <Flex flexDirection=\"column\" alignItems=\"flex-start\">\r\n            <Heading fontSize={18} color=\"teal.900\">\r\n              {name}\r\n            </Heading>\r\n            <Text>\r\n              <a href={`tel:${number}`}> {number}</a>\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n\r\n        <Flex>\r\n          <Button\r\n            variantColor=\"teal\"\r\n            variant=\"outline\"\r\n            width=\"100px\"\r\n            type=\"button\"\r\n            onClick={onOpen}\r\n          >\r\n            Edit <Icon name=\"edit\" size=\"18px\" ml={3} />\r\n          </Button>\r\n\r\n          <Button\r\n            ml={3}\r\n            variantColor=\"teal\"\r\n            width=\"100px\"\r\n            type=\"button\"\r\n            onClick={onDeleteContact}\r\n          >\r\n            Delete <Icon name=\"delete\" size=\"18px\" ml={3} />\r\n          </Button>\r\n        </Flex>\r\n      </Flex>\r\n\r\n      <Modal\r\n        disableEnforceFocus={false}\r\n        initialFocusRef={initialRef}\r\n        finalFocusRef={finalRef}\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n      >\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Edit your contact</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody px={6}>\r\n            <ContactForm\r\n              id={id}\r\n              nameItem={name}\r\n              numberItem={number}\r\n              onCloseModal={onClose}\r\n            />\r\n\r\n            <Button\r\n              onClick={onClose}\r\n              width=\"45%\"\r\n              position=\"absolute\"\r\n              top=\"270px\"\r\n              right=\"28px\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </ModalBody>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n} from \"../../redux/contacts/operations\";\r\nimport { useAuth } from '../../hooks';\r\nimport ContactItem from \"../ContactItem/ContactItem\";\r\n\r\nimport {\r\n  ListItem,\r\n  List,\r\n} from \"@chakra-ui/core\";\r\n\r\nconst filterAllContacts = (contacts, filter) => {\r\n  return contacts?.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n};\r\n\r\nconst ContactList = () => {\r\n  const {token} = useAuth();\r\n  const { data: contacts } = useFetchContactsQuery(token);\r\n\r\n  const filterAll = useSelector((state) => state.filter);\r\n  const items = filterAllContacts(contacts, filterAll);\r\n\r\n  const [deleteContact] = useDeleteContactMutation();\r\n\r\n  return (\r\n    <List spacing={3} borderWidth=\"1px\" rounded=\"md\" overflow=\"hidden\">\r\n      {items?.map(({ id, name, number }) => (\r\n        <ListItem key={id}>\r\n          <ContactItem\r\n            id={id}\r\n            name={name}\r\n            number={number}\r\n            onDeleteContact={() => deleteContact({ id, token })}\r\n          />\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\n\r\nimport ContactForm from \"../../components/ContactForm/ContactForm\";\r\nimport Filter from \"../../components/Filter/Filter\";\r\nimport ContactList from \"../../components/ContactList/ContactList\";\r\n\r\nimport { Box, Heading, Flex } from \"@chakra-ui/core\";\r\n\r\nexport default function ContactsPage() {\r\n  return (\r\n    <div>\r\n      <Flex\r\n        minHeight=\"100vh\"\r\n        width=\"full\"\r\n        align=\"start\"\r\n        justifyContent=\"space-around\"\r\n        py={12}\r\n      >\r\n        <Box\r\n          borderWidth={1}\r\n          px={4}\r\n          width=\"full\"\r\n          maxWidth=\"500px\"\r\n          borderRadius={4}\r\n          textAlign=\"center\"\r\n          boxShadow=\"lg\"\r\n        >\r\n          <Heading className=\"text-center\">Phonebook</Heading>\r\n          <ContactForm />\r\n        </Box>\r\n        <Box\r\n          px={4}\r\n          width=\"full\"\r\n          maxWidth=\"600px\"\r\n          borderRadius={4}\r\n          textAlign=\"center\"\r\n        >\r\n          <Heading>Contacts</Heading>\r\n          <Filter />\r\n          <ContactList />\r\n        </Box>\r\n      </Flex>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ContactForm","_ref","id","nameItem","numberItem","onCloseModal","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","token","useAuth","contacts","useFetchContactsQuery","data","_useCreateContactMuta","useCreateContactMutation","createContact","_useEditContactMutati","useEditContactMutation","editContact","toast","useToast","handleChange","e","_e$target","target","value","console","warn","concat","reset","_jsx","Box","my","textAlign","children","_jsxs","onSubmit","preventDefault","contactName","theSameContact","some","contact","toLowerCase","includes","title","description","status","duration","isClosable","FormControl","FormLabel","Input","type","onChange","placeholder","pattern","required","mt","Button","variantColor","width","borderWidth","defaultProps","useSelector","state","filter","dispatch","useDispatch","_Fragment","Text","mb","filterContact","ContactItem","onDeleteContact","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","initialRef","React","finalRef","Flex","py","px","borderRadius","bg","w","border","borderColor","justifyContent","alignItems","Avatar","mr","flexDirection","Heading","fontSize","color","href","variant","onClick","Icon","size","ml","Modal","disableEnforceFocus","initialFocusRef","finalFocusRef","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","position","top","right","items","filterAllContacts","_useDeleteContactMuta","useDeleteContactMutation","deleteContact","List","spacing","rounded","overflow","map","ListItem","ContactsPage","minHeight","align","maxWidth","boxShadow","className","Filter","ContactList"],"sourceRoot":""}